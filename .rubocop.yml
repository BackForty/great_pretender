require:
  - rubocop-ordered_methods
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec
  - rubocop-rails
  - standard

inherit_gem:
  rubocop-ordered_methods:
    - config/default.yml
  rubocop-performance:
    - config/default.yml
  rubocop-rails:
    - config/default.yml
  rubocop-rspec:
    - config/default.yml
  standard:
    - config/ruby-2.7.yml

AllCops:
  TargetRubyVersion: 2.7.6
  NewCops: enable
  Exclude:
    - "bin/**/*"
    - "coverage/**/*"
    - "db/migrate/*"
    - "db/schema.rb"
    - "lib/enum_migration.rb"
    - "log/**/*"
    - "node_modules/**/*"
    - "public/**/*"
    - "tmp/**/*"
    - "vendor/**/*"

Layout/FirstHashElementLineBreak:
  Enabled: true

Layout/FirstMethodArgumentLineBreak:
  Enabled: true

Layout/HashAlignment:
  Enabled: true
  EnforcedHashRocketStyle: table
  EnforcedColonStyle: table
  EnforcedLastArgumentHashStyle: always_inspect

Layout/MultilineArrayLineBreaks:
  Enabled: true

Layout/MultilineArrayBraceLayout:
  Enabled: true
  EnforcedStyle: symmetrical

Layout/MultilineHashBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineMethodCallBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineHashKeyLineBreaks:
  Enabled: true

Layout/MultilineMethodArgumentLineBreaks:
  Enabled: true

Layout/ParameterAlignment:
  Enabled: true
  EnforcedStyle: with_fixed_indentation

Layout/RescueEnsureAlignment:
  Enabled: false

Lint/AssignmentInCondition:
  Enabled: false

# Yo ... `to_i` is gonna have to suffice for now because `Integer(possibly_nil, 10)` explodes, like,
# all the time
Lint/NumberConversion:
  Enabled: false

Rails/DynamicFindBy:
  Enabled: true
  AllowedMethods:
    - find_by_short_id
    - find_by_slug # Generated by Slugify fairly often
    - find_by_slug! # Samesies
    - find_by_variant_slug

Rails/FilePath:
  EnforcedStyle: arguments

Rails/HasAndBelongsToMany:
  Enabled: false

Rails/RakeEnvironment:
  Enabled: false

Rails/SkipsModelValidations:
  Enabled: false

Rails/UnknownEnv:
  Enabled: true
  Environments:
    - development
    - test
    - production
    - staging

RSpec/Capybara/FeatureMethods:
  Enabled: true
  EnabledMethods:
    - scenario

RSpec/ContextWording:
  Enabled: false

RSpec/DescribeClass:
  Enabled: true
  Exclude:
    - spec/system/**/*

RSpec/Dialect:
  Enabled: false
  # PreferredMethods:
  #   context: describe

RSpec/ExampleLength:
  # Reasoning here is that, let's be honest, this is arbitrary AF. If the specs get out of control,
  # we'll switch it back on and figure something out. Until then, when you're running assertions
  # against large multi-line hashes, I'd rather have it be readable rather than arbitrarily short.
  Enabled: false

RSpec/Focus:
  AutoCorrect: false
  Enabled: true

RSpec/MultipleExpectations:
  Exclude:
    - spec/controllers/**/*
    - spec/system/**/*
  Max: 6

RSpec/MultipleMemoizedHelpers:
  Enabled: true
  Exclude:
    - spec/system/**/*
  Max: 8

RSpec/NestedGroups:
  Max: 5 # TODO: lower this again someday, but AFTER we pull the letter logic

RSpec/SharedExamples:
  Enabled: false

Style/FrozenStringLiteralComment:
  AutoCorrect: true
  Enabled: true
  Exclude:
    - db/data_schema.rb

Style/MissingRespondToMissing:
  Enabled: false # TODO: I dunno; maybe we do this. But for right now it's a pain in the neck

Style/StringLiterals:
  EnforcedStyle: double_quotes
  Enabled: true

Style/SymbolArray:
  Enabled: true

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Style/WordArray:
  Enabled: true
